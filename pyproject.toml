[tool.semantic_release]
version_variables = [
    "__init__.py:__version__:nf"
]
upload_to_pypi = false
build_command = ""
tag_format = "v{version}"
allow_zero_version = true
commit_parser = "conventional"
commit_message = "chore(release): v{version} [skip ci]"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_template = "CHANGELOG.md.j2"
changelog_components = ["bug fixes", "features", "performance", "documentation", "style", "refactor", "test", "chore"]

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.remote]
type = "github"

[tool.semantic_release.commit_parser_options]
major_tags = ["BREAKING CHANGE"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
allowed_tags = ["feat", "fix", "docs", "style", "refactor", "perf", "test", "chore"]

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP", # pyupgrade
    "C4", # flake8-comprehensions
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "SIM", # flake8-simplify
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
    "N999"  # Invalid module name (for QMServer directory)
]

[tool.ruff.lint.pydocstyle]
convention = "google"